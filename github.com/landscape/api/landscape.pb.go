// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.9.0
// source: proto/landscape.proto

package api

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//城市图片接口请求
type QueryCityImageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//城市
	City string `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *QueryCityImageReq) Reset() {
	*x = QueryCityImageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCityImageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCityImageReq) ProtoMessage() {}

func (x *QueryCityImageReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCityImageReq.ProtoReflect.Descriptor instead.
func (*QueryCityImageReq) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{0}
}

func (x *QueryCityImageReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

//城市图片接口请求
type QueryCityImageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//图片
	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *QueryCityImageResp) Reset() {
	*x = QueryCityImageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCityImageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCityImageResp) ProtoMessage() {}

func (x *QueryCityImageResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCityImageResp.ProtoReflect.Descriptor instead.
func (*QueryCityImageResp) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{1}
}

func (x *QueryCityImageResp) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

//文章排行榜接口请求
type QueryRankListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City string `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *QueryRankListReq) Reset() {
	*x = QueryRankListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRankListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRankListReq) ProtoMessage() {}

func (x *QueryRankListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRankListReq.ProtoReflect.Descriptor instead.
func (*QueryRankListReq) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{2}
}

func (x *QueryRankListReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

//文章排行榜接口返回
type QueryRankListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//文章UUID列表
	Uuid []string `protobuf:"bytes,1,rep,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *QueryRankListResp) Reset() {
	*x = QueryRankListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRankListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRankListResp) ProtoMessage() {}

func (x *QueryRankListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRankListResp.ProtoReflect.Descriptor instead.
func (*QueryRankListResp) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{3}
}

func (x *QueryRankListResp) GetUuid() []string {
	if x != nil {
		return x.Uuid
	}
	return nil
}

//获取轮播图图片列表请求
type QuerySwiperImageListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QuerySwiperImageListReq) Reset() {
	*x = QuerySwiperImageListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySwiperImageListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySwiperImageListReq) ProtoMessage() {}

func (x *QuerySwiperImageListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySwiperImageListReq.ProtoReflect.Descriptor instead.
func (*QuerySwiperImageListReq) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{4}
}

//获取轮播图图片列表返回
type QuerySwiperImageListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//轮播图片列表
	Image []string `protobuf:"bytes,1,rep,name=image,proto3" json:"image,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,4,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *QuerySwiperImageListResp) Reset() {
	*x = QuerySwiperImageListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySwiperImageListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySwiperImageListResp) ProtoMessage() {}

func (x *QuerySwiperImageListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySwiperImageListResp.ProtoReflect.Descriptor instead.
func (*QuerySwiperImageListResp) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{5}
}

func (x *QuerySwiperImageListResp) GetImage() []string {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *QuerySwiperImageListResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QuerySwiperImageListResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *QuerySwiperImageListResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

//获取省份和城市的接口请求
type QueryCityListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryCityListReq) Reset() {
	*x = QueryCityListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCityListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCityListReq) ProtoMessage() {}

func (x *QueryCityListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCityListReq.ProtoReflect.Descriptor instead.
func (*QueryCityListReq) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{6}
}

//获取省份和城市的接口返回
type QueryCityListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provinces []*Province `protobuf:"bytes,1,rep,name=Provinces,proto3" json:"Provinces,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,4,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *QueryCityListResp) Reset() {
	*x = QueryCityListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCityListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCityListResp) ProtoMessage() {}

func (x *QueryCityListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCityListResp.ProtoReflect.Descriptor instead.
func (*QueryCityListResp) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{7}
}

func (x *QueryCityListResp) GetProvinces() []*Province {
	if x != nil {
		return x.Provinces
	}
	return nil
}

func (x *QueryCityListResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryCityListResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *QueryCityListResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

//省份
type Province struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//省份名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	//城市
	Cities []string `protobuf:"bytes,2,rep,name=cities,proto3" json:"cities,omitempty"`
}

func (x *Province) Reset() {
	*x = Province{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Province) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Province) ProtoMessage() {}

func (x *Province) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Province.ProtoReflect.Descriptor instead.
func (*Province) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{8}
}

func (x *Province) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Province) GetCities() []string {
	if x != nil {
		return x.Cities
	}
	return nil
}

//查询某一篇文章内容的请求
type QueryOneEssayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//UUID，一篇文章的唯一编号
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *QueryOneEssayReq) Reset() {
	*x = QueryOneEssayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOneEssayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOneEssayReq) ProtoMessage() {}

func (x *QueryOneEssayReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOneEssayReq.ProtoReflect.Descriptor instead.
func (*QueryOneEssayReq) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{9}
}

func (x *QueryOneEssayReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

//查询某一篇文章内容的返回
type QueryOneEssayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//文章
	Essay *Essay `protobuf:"bytes,1,opt,name=essay,proto3" json:"essay,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,4,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *QueryOneEssayResp) Reset() {
	*x = QueryOneEssayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOneEssayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOneEssayResp) ProtoMessage() {}

func (x *QueryOneEssayResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOneEssayResp.ProtoReflect.Descriptor instead.
func (*QueryOneEssayResp) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{10}
}

func (x *QueryOneEssayResp) GetEssay() *Essay {
	if x != nil {
		return x.Essay
	}
	return nil
}

func (x *QueryOneEssayResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryOneEssayResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *QueryOneEssayResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

//查询相关文章列表请求
type QueryRelatedEssayListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//UUID，一篇文章的唯一编号
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// 本次请求结果实际页码, 一般与请求参数一致
	PageNum int32 `protobuf:"varint,3,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	// 分页大小
	PageSize int32 `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryRelatedEssayListReq) Reset() {
	*x = QueryRelatedEssayListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRelatedEssayListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRelatedEssayListReq) ProtoMessage() {}

func (x *QueryRelatedEssayListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRelatedEssayListReq.ProtoReflect.Descriptor instead.
func (*QueryRelatedEssayListReq) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{11}
}

func (x *QueryRelatedEssayListReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QueryRelatedEssayListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryRelatedEssayListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

//查询相关文章列表返回
type QueryRelatedEssayListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//文章
	EssayList []*Essay `protobuf:"bytes,5,rep,name=essayList,proto3" json:"essayList,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,4,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *QueryRelatedEssayListResp) Reset() {
	*x = QueryRelatedEssayListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRelatedEssayListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRelatedEssayListResp) ProtoMessage() {}

func (x *QueryRelatedEssayListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRelatedEssayListResp.ProtoReflect.Descriptor instead.
func (*QueryRelatedEssayListResp) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{12}
}

func (x *QueryRelatedEssayListResp) GetEssayList() []*Essay {
	if x != nil {
		return x.EssayList
	}
	return nil
}

func (x *QueryRelatedEssayListResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryRelatedEssayListResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *QueryRelatedEssayListResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

//查询文章列表请求
type QueryEssayListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//城市。如果不限的话，就传递空数组
	Cities []string `protobuf:"bytes,1,rep,name=cities,proto3" json:"cities,omitempty"`
	//文章类型
	Types []string `protobuf:"bytes,2,rep,name=types,proto3" json:"types,omitempty"`
	//关键字
	Keywords string `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords,omitempty"`
	// 本次请求结果实际页码, 一般与请求参数一致
	PageNum int32 `protobuf:"varint,4,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	// 分页大小
	PageSize int32 `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *QueryEssayListReq) Reset() {
	*x = QueryEssayListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEssayListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEssayListReq) ProtoMessage() {}

func (x *QueryEssayListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEssayListReq.ProtoReflect.Descriptor instead.
func (*QueryEssayListReq) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{13}
}

func (x *QueryEssayListReq) GetCities() []string {
	if x != nil {
		return x.Cities
	}
	return nil
}

func (x *QueryEssayListReq) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *QueryEssayListReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *QueryEssayListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryEssayListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryEssayListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EssayList []*Essay `protobuf:"bytes,1,rep,name=essayList,proto3" json:"essayList,omitempty"`
	// 是否成功访问
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// 错误码
	ErrorCode string `protobuf:"bytes,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// 错误详情
	ErrorMsg string `protobuf:"bytes,4,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *QueryEssayListResp) Reset() {
	*x = QueryEssayListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEssayListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEssayListResp) ProtoMessage() {}

func (x *QueryEssayListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEssayListResp.ProtoReflect.Descriptor instead.
func (*QueryEssayListResp) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{14}
}

func (x *QueryEssayListResp) GetEssayList() []*Essay {
	if x != nil {
		return x.EssayList
	}
	return nil
}

func (x *QueryEssayListResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QueryEssayListResp) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *QueryEssayListResp) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

//文章
type Essay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//UUID，一篇文章的唯一编号
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	//标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	//内容
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	//发表时间
	Time int64 `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	//所属城市
	City string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	//文章类型
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// 图片
	Image string `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty"`
	// 点击量
	Hits int32 `protobuf:"varint,8,opt,name=hits,proto3" json:"hits,omitempty"`
	// 顶
	Like int32 `protobuf:"varint,9,opt,name=like,proto3" json:"like,omitempty"`
}

func (x *Essay) Reset() {
	*x = Essay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_landscape_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Essay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Essay) ProtoMessage() {}

func (x *Essay) ProtoReflect() protoreflect.Message {
	mi := &file_proto_landscape_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Essay.ProtoReflect.Descriptor instead.
func (*Essay) Descriptor() ([]byte, []int) {
	return file_proto_landscape_proto_rawDescGZIP(), []int{15}
}

func (x *Essay) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Essay) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Essay) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Essay) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Essay) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Essay) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Essay) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Essay) GetHits() int32 {
	if x != nil {
		return x.Hits
	}
	return 0
}

func (x *Essay) GetLike() int32 {
	if x != nil {
		return x.Like
	}
	return 0
}

var File_proto_landscape_proto protoreflect.FileDescriptor

var file_proto_landscape_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61,
	0x70, 0x65, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x11, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x69, 0x74, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x22, 0x2a, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x69, 0x74, 0x79, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x26,
	0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0x27, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x19, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x77, 0x69, 0x70, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x84, 0x01, 0x0a, 0x18, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x77, 0x69, 0x70, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x22, 0x12, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x69, 0x74, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x9a, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x73, 0x67, 0x22, 0x36, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x26, 0x0a, 0x10, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x6e, 0x65, 0x45, 0x73, 0x73, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x6e, 0x65, 0x45,
	0x73, 0x73, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x73, 0x73, 0x61,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63,
	0x61, 0x70, 0x65, 0x2e, 0x45, 0x73, 0x73, 0x61, 0x79, 0x52, 0x05, 0x65, 0x73, 0x73, 0x61, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x73, 0x67, 0x22, 0x64, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x45, 0x73, 0x73, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x19, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x45, 0x73, 0x73, 0x61, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x09, 0x65, 0x73, 0x73, 0x61,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x61,
	0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2e, 0x45, 0x73, 0x73, 0x61, 0x79, 0x52, 0x09, 0x65,
	0x73, 0x73, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xa5, 0x01, 0x0a,
	0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x73, 0x73, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x23, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x73,
	0x73, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x09, 0x65,
	0x73, 0x73, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2e, 0x45, 0x73, 0x73, 0x61, 0x79,
	0x52, 0x09, 0x65, 0x73, 0x73, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22,
	0xc5, 0x01, 0x0a, 0x05, 0x45, 0x73, 0x73, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x69, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68,
	0x69, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x32, 0xb9, 0x06, 0x0a, 0x10, 0x4c, 0x61, 0x6e, 0x64,
	0x73, 0x63, 0x61, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6b, 0x0a, 0x0e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x73, 0x73, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x45, 0x73, 0x73, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6c,
	0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x73,
	0x73, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x65,
	0x73, 0x73, 0x61, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x88, 0x01, 0x0a, 0x15, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x45, 0x73, 0x73, 0x61, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x45, 0x73, 0x73, 0x61,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73,
	0x63, 0x61, 0x70, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x45, 0x73, 0x73, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x24,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x73, 0x73, 0x61, 0x79, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x6e, 0x65,
	0x45, 0x73, 0x73, 0x61, 0x79, 0x12, 0x1b, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70,
	0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x6e, 0x65, 0x45, 0x73, 0x73, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x6e, 0x65, 0x45, 0x73, 0x73, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2f, 0x6f, 0x6e, 0x65, 0x5f, 0x65, 0x73, 0x73, 0x61, 0x79, 0x12, 0x67, 0x0a,
	0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b,
	0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6c, 0x61,
	0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x69, 0x74,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x63, 0x69, 0x74,
	0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x77, 0x69, 0x70, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x22, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x77, 0x69, 0x70, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x77, 0x69, 0x70, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x73, 0x77, 0x69, 0x70,
	0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x67, 0x0a,
	0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b,
	0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6c, 0x61,
	0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x61, 0x6e,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x72, 0x61, 0x6e,
	0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x6b, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x69, 0x74, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73,
	0x63, 0x61, 0x70, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x69, 0x74, 0x79, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61,
	0x70, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x69, 0x74, 0x79, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f,
	0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x42, 0x1a, 0x5a, 0x18, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_landscape_proto_rawDescOnce sync.Once
	file_proto_landscape_proto_rawDescData = file_proto_landscape_proto_rawDesc
)

func file_proto_landscape_proto_rawDescGZIP() []byte {
	file_proto_landscape_proto_rawDescOnce.Do(func() {
		file_proto_landscape_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_landscape_proto_rawDescData)
	})
	return file_proto_landscape_proto_rawDescData
}

var file_proto_landscape_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_landscape_proto_goTypes = []interface{}{
	(*QueryCityImageReq)(nil),         // 0: landscape.QueryCityImageReq
	(*QueryCityImageResp)(nil),        // 1: landscape.QueryCityImageResp
	(*QueryRankListReq)(nil),          // 2: landscape.QueryRankListReq
	(*QueryRankListResp)(nil),         // 3: landscape.QueryRankListResp
	(*QuerySwiperImageListReq)(nil),   // 4: landscape.QuerySwiperImageListReq
	(*QuerySwiperImageListResp)(nil),  // 5: landscape.QuerySwiperImageListResp
	(*QueryCityListReq)(nil),          // 6: landscape.QueryCityListReq
	(*QueryCityListResp)(nil),         // 7: landscape.QueryCityListResp
	(*Province)(nil),                  // 8: landscape.Province
	(*QueryOneEssayReq)(nil),          // 9: landscape.QueryOneEssayReq
	(*QueryOneEssayResp)(nil),         // 10: landscape.QueryOneEssayResp
	(*QueryRelatedEssayListReq)(nil),  // 11: landscape.QueryRelatedEssayListReq
	(*QueryRelatedEssayListResp)(nil), // 12: landscape.QueryRelatedEssayListResp
	(*QueryEssayListReq)(nil),         // 13: landscape.QueryEssayListReq
	(*QueryEssayListResp)(nil),        // 14: landscape.QueryEssayListResp
	(*Essay)(nil),                     // 15: landscape.Essay
}
var file_proto_landscape_proto_depIdxs = []int32{
	8,  // 0: landscape.QueryCityListResp.Provinces:type_name -> landscape.Province
	15, // 1: landscape.QueryOneEssayResp.essay:type_name -> landscape.Essay
	15, // 2: landscape.QueryRelatedEssayListResp.essayList:type_name -> landscape.Essay
	15, // 3: landscape.QueryEssayListResp.essayList:type_name -> landscape.Essay
	13, // 4: landscape.LandscapeService.QueryEssayList:input_type -> landscape.QueryEssayListReq
	11, // 5: landscape.LandscapeService.QueryRelatedEssayList:input_type -> landscape.QueryRelatedEssayListReq
	9,  // 6: landscape.LandscapeService.QueryOneEssay:input_type -> landscape.QueryOneEssayReq
	6,  // 7: landscape.LandscapeService.QueryCityList:input_type -> landscape.QueryCityListReq
	4,  // 8: landscape.LandscapeService.QuerySwiperImageList:input_type -> landscape.QuerySwiperImageListReq
	2,  // 9: landscape.LandscapeService.QueryRankList:input_type -> landscape.QueryRankListReq
	0,  // 10: landscape.LandscapeService.QueryCityImage:input_type -> landscape.QueryCityImageReq
	14, // 11: landscape.LandscapeService.QueryEssayList:output_type -> landscape.QueryEssayListResp
	12, // 12: landscape.LandscapeService.QueryRelatedEssayList:output_type -> landscape.QueryRelatedEssayListResp
	10, // 13: landscape.LandscapeService.QueryOneEssay:output_type -> landscape.QueryOneEssayResp
	7,  // 14: landscape.LandscapeService.QueryCityList:output_type -> landscape.QueryCityListResp
	5,  // 15: landscape.LandscapeService.QuerySwiperImageList:output_type -> landscape.QuerySwiperImageListResp
	3,  // 16: landscape.LandscapeService.QueryRankList:output_type -> landscape.QueryRankListResp
	1,  // 17: landscape.LandscapeService.QueryCityImage:output_type -> landscape.QueryCityImageResp
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_landscape_proto_init() }
func file_proto_landscape_proto_init() {
	if File_proto_landscape_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_landscape_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCityImageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCityImageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRankListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRankListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySwiperImageListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySwiperImageListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCityListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCityListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Province); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOneEssayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOneEssayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRelatedEssayListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRelatedEssayListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEssayListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEssayListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_landscape_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Essay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_landscape_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_landscape_proto_goTypes,
		DependencyIndexes: file_proto_landscape_proto_depIdxs,
		MessageInfos:      file_proto_landscape_proto_msgTypes,
	}.Build()
	File_proto_landscape_proto = out.File
	file_proto_landscape_proto_rawDesc = nil
	file_proto_landscape_proto_goTypes = nil
	file_proto_landscape_proto_depIdxs = nil
}
